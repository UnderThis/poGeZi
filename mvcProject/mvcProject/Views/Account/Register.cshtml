@model mvcProject.Models.RegisterModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Register</title>
</head>
<body>
     <script src="~/Scripts/jquery-1.7.1.min.js"  type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script  src="~/Scripts/jquery-form.js"></script>
    <script type="text/javascript">
        $(function (){
            $("#file").on("change", function ()
            {
                var file = this.files[0];
                if (this.files && file) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("#preview").attr('src', e.target.result);
                    }
                    reader.readAsDataURL(file);
                }
            })
        })
        
    </script>
   

    <form action="/Account/Register" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
       @Html.ValidationSummary()
        @Html.ValidationSummary(true)
        <fieldset>
            <legend>Users</legend>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.UserName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UserName)
                @Html.ValidationMessageFor(model => model.UserName)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Password)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
              <div class="editor-label">
                @Html.LabelFor(model => model.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ConfirmPassword)
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Nickname)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Nickname)
                @Html.ValidationMessageFor(model => model.Nickname)
            </div>
           <div class="checkbox">
                    @Html.RadioButtonFor(Model => Model.Sex, "男", new { @id = "Sex", @name = "Status" }) 男

                    @Html.RadioButtonFor(Model => Model.Sex, "女", new { @id = "Sex", @name = "Status" }) 女
             </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.E_mail)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.E_mail)
                @Html.ValidationMessageFor(model => model.E_mail)
            </div>
           

          @*  <div class="editor-label">
                @Html.LabelFor(model => model.Nickname)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Nickname)
                @Html.ValidationMessageFor(model => model.Nickname)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Sex)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Sex)
                @Html.ValidationMessageFor(model => model.Sex)
            </div>
    
          
    
            
    
            <div class="editor-label">
                @Html.LabelFor(model => model.PhoneNum)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PhoneNum)
                @Html.ValidationMessageFor(model => model.PhoneNum)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.E_mail)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.E_mail)
                @Html.ValidationMessageFor(model => model.E_mail)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Birthday)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Birthday)
                @Html.ValidationMessageFor(model => model.Birthday)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Label)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Label)
                @Html.ValidationMessageFor(model => model.Label)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.RegisterDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.RegisterDate)
                @Html.ValidationMessageFor(model => model.RegisterDate)
            </div>
    
         
            <div class="editor-label">
                @Html.LabelFor(model => model.UserLogo)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UserLogo)
                @Html.ValidationMessageFor(model => model.UserLogo)
            </div>
     
    *@  <div style="display:flex;flex-direction:column">
           <div >
               <img id="preview" src="~/Image/null.jpg"  style="width:100px;height:100px;border-radius:100%"/>
           </div>
           <div>
               <input id="file" type="file" name="file">
           </div>
                
                 
         </div>
            <p>
                <input type="submit" value="Create" />
            </p>
        </fieldset>
         
    
    
          
            </form>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
